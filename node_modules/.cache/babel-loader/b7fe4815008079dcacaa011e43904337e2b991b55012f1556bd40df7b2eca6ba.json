{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { rand, randAvatar, randFullName } from \"@ngneat/falso\";\nimport { v4 as uuid } from \"uuid\";\nimport { DateTime } from \"luxon\";\nimport { INTERVIEW_TITLES, NEXT_STAGE_INDEX, ORDERED_INTERVIEW_PLAN, VISITED_STAGES } from \"./data\";\nimport uniqueRandomArray from \"unique-random-array\";\nexport function generateInterviewProgress() {\n  const randomInterviewTitle = uniqueRandomArray(INTERVIEW_TITLES);\n  const visitedStages = [];\n  var lastDate;\n  for (var i = VISITED_STAGES.length - 1; i >= 0; i--) {\n    const interviewStage = VISITED_STAGES[i];\n    const [visitedStage, enteredAt] = generateVisitedStage(interviewStage, lastDate);\n    lastDate = enteredAt;\n    visitedStages.push(visitedStage);\n  }\n  return {\n    visitedStages: visitedStages.reverse(),\n    nextStage: {\n      interviewStage: ORDERED_INTERVIEW_PLAN[NEXT_STAGE_INDEX],\n      interviewSchedule: [generateInterview(randomInterviewTitle()), generateInterview(randomInterviewTitle()), generateInterview(randomInterviewTitle())]\n    }\n  };\n}\nconst RANDOM_RSVP_STATUS = uniqueRandomArray([\"accepted\", \"tentative\", \"declined\"]);\nconst RANDOM_SCORE = uniqueRandomArray([1, 2, 3, 4, \"submitted\"]);\nexport function generateVisitedStage(interviewStage, leftAt) {\n  const enteredAtDaysAgo = rand([3, 5, 7, 14]);\n  const enteredAt = (leftAt != null ? leftAt : DateTime.now()).minus({\n    days: enteredAtDaysAgo\n  });\n  let nextInterviewStart = (leftAt != null ? leftAt.minus({\n    days: 1\n  }) : DateTime.now().plus({\n    days: 2\n  })).startOf(\"day\").set({\n    hour: 10\n  });\n  const interviewCount = leftAt != null ? rand([0, 1]) : 4;\n  const randomInterviewTitle = uniqueRandomArray(INTERVIEW_TITLES);\n  const interviews = [];\n  for (var i = 0; i < interviewCount; i++) {\n    const interviewLength = rand([30, 45, 60, 90]);\n    const interviewerCount = rand([1, 2]);\n    const start = nextInterviewStart;\n    const end = start.plus({\n      minutes: interviewLength\n    });\n    const interviewers = [];\n    for (var j = 0; j < interviewerCount; j++) {\n      interviewers.push({\n        id: uuid(),\n        user: {\n          id: uuid(),\n          name: randFullName(),\n          profilePhotoUrl: randAvatar()\n        },\n        rsvpStatus: RANDOM_RSVP_STATUS(),\n        score: leftAt != null ? RANDOM_SCORE() : \"unsubmitted\"\n      });\n    }\n    interviews.push({\n      id: uuid(),\n      interview: generateInterview(randomInterviewTitle()),\n      startIso: start.toISO(),\n      endIso: end.toISO(),\n      interviewers\n    });\n    nextInterviewStart = end;\n  }\n  return [{\n    id: uuid(),\n    interviewStage,\n    enteredAtIso: enteredAt.toISO(),\n    leftAtIso: leftAt && leftAt.toISO(),\n    interviews\n  }, enteredAt];\n}\nexport function generateInterview(title) {\n  return {\n    id: uuid(),\n    title\n  };\n}","map":{"version":3,"names":["rand","randAvatar","randFullName","v4","uuid","DateTime","INTERVIEW_TITLES","NEXT_STAGE_INDEX","ORDERED_INTERVIEW_PLAN","VISITED_STAGES","uniqueRandomArray","generateInterviewProgress","randomInterviewTitle","visitedStages","lastDate","i","length","interviewStage","visitedStage","enteredAt","generateVisitedStage","push","reverse","nextStage","interviewSchedule","generateInterview","RANDOM_RSVP_STATUS","RANDOM_SCORE","leftAt","enteredAtDaysAgo","now","minus","days","nextInterviewStart","plus","startOf","set","hour","interviewCount","interviews","interviewLength","interviewerCount","start","end","minutes","interviewers","j","id","user","name","profilePhotoUrl","rsvpStatus","score","interview","startIso","toISO","endIso","enteredAtIso","leftAtIso","title"],"sources":["/Users/will/Desktop/design-task/src/generate.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { rand, randAvatar, randFullName } from \"@ngneat/falso\";\nimport {\n  Interview,\n  InterviewProgress,\n  InterviewStage,\n  ScheduledInterview,\n  VisitedInterviewStage\n} from \"./types\";\nimport { v4 as uuid } from \"uuid\";\nimport { DateTime } from \"luxon\";\nimport {\n  INTERVIEW_TITLES,\n  NEXT_STAGE_INDEX,\n  ORDERED_INTERVIEW_PLAN,\n  VISITED_STAGES\n} from \"./data\";\nimport uniqueRandomArray from \"unique-random-array\";\n\nexport function generateInterviewProgress(): InterviewProgress {\n  const randomInterviewTitle = uniqueRandomArray(INTERVIEW_TITLES);\n  const visitedStages = [];\n  var lastDate: DateTime | undefined;\n\n  for (var i = VISITED_STAGES.length - 1; i >= 0; i--) {\n    const interviewStage = VISITED_STAGES[i];\n\n    const [visitedStage, enteredAt] = generateVisitedStage(\n      interviewStage,\n      lastDate\n    );\n    lastDate = enteredAt;\n\n    visitedStages.push(visitedStage);\n  }\n\n  return {\n    visitedStages: visitedStages.reverse(),\n    nextStage: {\n      interviewStage: ORDERED_INTERVIEW_PLAN[NEXT_STAGE_INDEX],\n      interviewSchedule: [\n        generateInterview(randomInterviewTitle()),\n        generateInterview(randomInterviewTitle()),\n        generateInterview(randomInterviewTitle())\n      ]\n    }\n  };\n}\n\nconst RANDOM_RSVP_STATUS = uniqueRandomArray([\n  \"accepted\",\n  \"tentative\",\n  \"declined\"\n]);\nconst RANDOM_SCORE = uniqueRandomArray([1, 2, 3, 4, \"submitted\"]);\n\nexport function generateVisitedStage(\n  interviewStage: InterviewStage,\n  leftAt?: DateTime\n): [VisitedInterviewStage, DateTime] {\n  const enteredAtDaysAgo = rand([3, 5, 7, 14]);\n  const enteredAt = (leftAt != null ? leftAt : DateTime.now()).minus({\n    days: enteredAtDaysAgo\n  });\n\n  let nextInterviewStart = (leftAt != null\n    ? leftAt.minus({ days: 1 })\n    : DateTime.now().plus({ days: 2 })\n  )\n    .startOf(\"day\")\n    .set({ hour: 10 });\n  const interviewCount = leftAt != null ? rand([0, 1]) : 4;\n  const randomInterviewTitle = uniqueRandomArray(INTERVIEW_TITLES);\n  const interviews: ScheduledInterview[] = [];\n\n  for (var i = 0; i < interviewCount; i++) {\n    const interviewLength = rand([30, 45, 60, 90]);\n    const interviewerCount = rand([1, 2]);\n\n    const start = nextInterviewStart;\n    const end = start.plus({ minutes: interviewLength });\n\n    const interviewers = [];\n    for (var j = 0; j < interviewerCount; j++) {\n      interviewers.push({\n        id: uuid(),\n        user: {\n          id: uuid(),\n          name: randFullName(),\n          profilePhotoUrl: randAvatar()\n        },\n        rsvpStatus: RANDOM_RSVP_STATUS(),\n        score: leftAt != null ? RANDOM_SCORE() : \"unsubmitted\"\n      });\n    }\n\n    interviews.push({\n      id: uuid(),\n      interview: generateInterview(randomInterviewTitle()),\n      startIso: start.toISO(),\n      endIso: end.toISO(),\n      interviewers\n    });\n    nextInterviewStart = end;\n  }\n\n  return [\n    {\n      id: uuid(),\n      interviewStage,\n      enteredAtIso: enteredAt.toISO(),\n      leftAtIso: leftAt && leftAt.toISO(),\n      interviews\n    },\n    enteredAt\n  ];\n}\n\nexport function generateInterview(title: string): Interview {\n  return {\n    id: uuid(),\n    title\n  };\n}\n"],"mappings":"AAAA;AACA,SAASA,IAAI,EAAEC,UAAU,EAAEC,YAAY,QAAQ,eAAe;AAQ9D,SAASC,EAAE,IAAIC,IAAI,QAAQ,MAAM;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SACEC,gBAAgB,EAChBC,gBAAgB,EAChBC,sBAAsB,EACtBC,cAAc,QACT,QAAQ;AACf,OAAOC,iBAAiB,MAAM,qBAAqB;AAEnD,OAAO,SAASC,yBAAyBA,CAAA,EAAsB;EAC7D,MAAMC,oBAAoB,GAAGF,iBAAiB,CAACJ,gBAAgB,CAAC;EAChE,MAAMO,aAAa,GAAG,EAAE;EACxB,IAAIC,QAA8B;EAElC,KAAK,IAAIC,CAAC,GAAGN,cAAc,CAACO,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IACnD,MAAME,cAAc,GAAGR,cAAc,CAACM,CAAC,CAAC;IAExC,MAAM,CAACG,YAAY,EAAEC,SAAS,CAAC,GAAGC,oBAAoB,CACpDH,cAAc,EACdH,QACF,CAAC;IACDA,QAAQ,GAAGK,SAAS;IAEpBN,aAAa,CAACQ,IAAI,CAACH,YAAY,CAAC;EAClC;EAEA,OAAO;IACLL,aAAa,EAAEA,aAAa,CAACS,OAAO,CAAC,CAAC;IACtCC,SAAS,EAAE;MACTN,cAAc,EAAET,sBAAsB,CAACD,gBAAgB,CAAC;MACxDiB,iBAAiB,EAAE,CACjBC,iBAAiB,CAACb,oBAAoB,CAAC,CAAC,CAAC,EACzCa,iBAAiB,CAACb,oBAAoB,CAAC,CAAC,CAAC,EACzCa,iBAAiB,CAACb,oBAAoB,CAAC,CAAC,CAAC;IAE7C;EACF,CAAC;AACH;AAEA,MAAMc,kBAAkB,GAAGhB,iBAAiB,CAAC,CAC3C,UAAU,EACV,WAAW,EACX,UAAU,CACX,CAAC;AACF,MAAMiB,YAAY,GAAGjB,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;AAEjE,OAAO,SAASU,oBAAoBA,CAClCH,cAA8B,EAC9BW,MAAiB,EACkB;EACnC,MAAMC,gBAAgB,GAAG7B,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;EAC5C,MAAMmB,SAAS,GAAG,CAACS,MAAM,IAAI,IAAI,GAAGA,MAAM,GAAGvB,QAAQ,CAACyB,GAAG,CAAC,CAAC,EAAEC,KAAK,CAAC;IACjEC,IAAI,EAAEH;EACR,CAAC,CAAC;EAEF,IAAII,kBAAkB,GAAG,CAACL,MAAM,IAAI,IAAI,GACpCA,MAAM,CAACG,KAAK,CAAC;IAAEC,IAAI,EAAE;EAAE,CAAC,CAAC,GACzB3B,QAAQ,CAACyB,GAAG,CAAC,CAAC,CAACI,IAAI,CAAC;IAAEF,IAAI,EAAE;EAAE,CAAC,CAAC,EAEjCG,OAAO,CAAC,KAAK,CAAC,CACdC,GAAG,CAAC;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EACpB,MAAMC,cAAc,GAAGV,MAAM,IAAI,IAAI,GAAG5B,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EACxD,MAAMY,oBAAoB,GAAGF,iBAAiB,CAACJ,gBAAgB,CAAC;EAChE,MAAMiC,UAAgC,GAAG,EAAE;EAE3C,KAAK,IAAIxB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuB,cAAc,EAAEvB,CAAC,EAAE,EAAE;IACvC,MAAMyB,eAAe,GAAGxC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC9C,MAAMyC,gBAAgB,GAAGzC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAErC,MAAM0C,KAAK,GAAGT,kBAAkB;IAChC,MAAMU,GAAG,GAAGD,KAAK,CAACR,IAAI,CAAC;MAAEU,OAAO,EAAEJ;IAAgB,CAAC,CAAC;IAEpD,MAAMK,YAAY,GAAG,EAAE;IACvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,gBAAgB,EAAEK,CAAC,EAAE,EAAE;MACzCD,YAAY,CAACxB,IAAI,CAAC;QAChB0B,EAAE,EAAE3C,IAAI,CAAC,CAAC;QACV4C,IAAI,EAAE;UACJD,EAAE,EAAE3C,IAAI,CAAC,CAAC;UACV6C,IAAI,EAAE/C,YAAY,CAAC,CAAC;UACpBgD,eAAe,EAAEjD,UAAU,CAAC;QAC9B,CAAC;QACDkD,UAAU,EAAEzB,kBAAkB,CAAC,CAAC;QAChC0B,KAAK,EAAExB,MAAM,IAAI,IAAI,GAAGD,YAAY,CAAC,CAAC,GAAG;MAC3C,CAAC,CAAC;IACJ;IAEAY,UAAU,CAAClB,IAAI,CAAC;MACd0B,EAAE,EAAE3C,IAAI,CAAC,CAAC;MACViD,SAAS,EAAE5B,iBAAiB,CAACb,oBAAoB,CAAC,CAAC,CAAC;MACpD0C,QAAQ,EAAEZ,KAAK,CAACa,KAAK,CAAC,CAAC;MACvBC,MAAM,EAAEb,GAAG,CAACY,KAAK,CAAC,CAAC;MACnBV;IACF,CAAC,CAAC;IACFZ,kBAAkB,GAAGU,GAAG;EAC1B;EAEA,OAAO,CACL;IACEI,EAAE,EAAE3C,IAAI,CAAC,CAAC;IACVa,cAAc;IACdwC,YAAY,EAAEtC,SAAS,CAACoC,KAAK,CAAC,CAAC;IAC/BG,SAAS,EAAE9B,MAAM,IAAIA,MAAM,CAAC2B,KAAK,CAAC,CAAC;IACnChB;EACF,CAAC,EACDpB,SAAS,CACV;AACH;AAEA,OAAO,SAASM,iBAAiBA,CAACkC,KAAa,EAAa;EAC1D,OAAO;IACLZ,EAAE,EAAE3C,IAAI,CAAC,CAAC;IACVuD;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}