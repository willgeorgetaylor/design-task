{"ast":null,"code":"import{rand,randAvatar,randFullName}from\"@ngneat/falso\";import{v4 as uuid}from\"uuid\";import{DateTime}from\"luxon\";import{INTERVIEW_TITLES,NEXT_STAGE_INDEX,ORDERED_INTERVIEW_PLAN,VISITED_STAGES}from\"./data\";import uniqueRandomArray from\"unique-random-array\";export function generateInterviewProgress(){const randomInterviewTitle=uniqueRandomArray(INTERVIEW_TITLES);const visitedStages=[];var lastDate;for(var i=VISITED_STAGES.length-1;i>=0;i--){const interviewStage=VISITED_STAGES[i];const[visitedStage,enteredAt]=generateVisitedStage(interviewStage,lastDate);lastDate=enteredAt;visitedStages.push(visitedStage);}return{visitedStages:visitedStages.reverse(),nextStage:{interviewStage:ORDERED_INTERVIEW_PLAN[NEXT_STAGE_INDEX],interviewSchedule:[generateInterview(randomInterviewTitle()),generateInterview(randomInterviewTitle()),generateInterview(randomInterviewTitle())]}};}const RANDOM_RSVP_STATUS=uniqueRandomArray([\"accepted\",\"tentative\",\"declined\"]);const RANDOM_SCORE=uniqueRandomArray([1,2,3,4,\"submitted\"]);export function generateVisitedStage(interviewStage,leftAt){const enteredAtDaysAgo=rand([3,5,7,14]);const enteredAt=(leftAt!=null?leftAt:DateTime.now()).minus({days:enteredAtDaysAgo});let nextInterviewStart=(leftAt!=null?leftAt.minus({days:1}):DateTime.now().plus({days:2})).startOf(\"day\").set({hour:10});const interviewCount=leftAt!=null?rand([0,1]):4;const randomInterviewTitle=uniqueRandomArray(INTERVIEW_TITLES);const interviews=[];for(var i=0;i<interviewCount;i++){const interviewLength=rand([30,45,60,90]);const interviewerCount=rand([1,2]);const start=nextInterviewStart;const end=start.plus({minutes:interviewLength});const interviewers=[];for(var j=0;j<interviewerCount;j++){interviewers.push({id:uuid(),user:{id:uuid(),name:randFullName(),profilePhotoUrl:randAvatar()},rsvpStatus:RANDOM_RSVP_STATUS(),score:leftAt!=null?RANDOM_SCORE():\"unsubmitted\"});}interviews.push({id:uuid(),interview:generateInterview(randomInterviewTitle()),startIso:start.toISO(),endIso:end.toISO(),interviewers});nextInterviewStart=end;}return[{id:uuid(),interviewStage,enteredAtIso:enteredAt.toISO(),leftAtIso:leftAt&&leftAt.toISO(),interviews},enteredAt];}export function generateInterview(title){return{id:uuid(),title};}","map":{"version":3,"names":["rand","randAvatar","randFullName","v4","uuid","DateTime","INTERVIEW_TITLES","NEXT_STAGE_INDEX","ORDERED_INTERVIEW_PLAN","VISITED_STAGES","uniqueRandomArray","generateInterviewProgress","randomInterviewTitle","visitedStages","lastDate","i","length","interviewStage","visitedStage","enteredAt","generateVisitedStage","push","reverse","nextStage","interviewSchedule","generateInterview","RANDOM_RSVP_STATUS","RANDOM_SCORE","leftAt","enteredAtDaysAgo","now","minus","days","nextInterviewStart","plus","startOf","set","hour","interviewCount","interviews","interviewLength","interviewerCount","start","end","minutes","interviewers","j","id","user","name","profilePhotoUrl","rsvpStatus","score","interview","startIso","toISO","endIso","enteredAtIso","leftAtIso","title"],"sources":["/Users/will/Desktop/design-task/src/generate.ts"],"sourcesContent":["import { rand, randAvatar, randFullName } from \"@ngneat/falso\";\nimport {\n  Interview,\n  InterviewProgress,\n  InterviewStage,\n  ScheduledInterview,\n  VisitedInterviewStage,\n} from \"./types\";\nimport { v4 as uuid } from \"uuid\";\nimport { DateTime } from \"luxon\";\nimport {\n  INTERVIEW_TITLES,\n  NEXT_STAGE_INDEX,\n  ORDERED_INTERVIEW_PLAN,\n  VISITED_STAGES,\n} from \"./data\";\nimport uniqueRandomArray from \"unique-random-array\";\n\nexport function generateInterviewProgress(): InterviewProgress {\n  const randomInterviewTitle = uniqueRandomArray(INTERVIEW_TITLES);\n  const visitedStages = [];\n  var lastDate: DateTime | undefined;\n\n  for (var i = VISITED_STAGES.length - 1; i >= 0; i--) {\n    const interviewStage = VISITED_STAGES[i];\n\n    const [visitedStage, enteredAt] = generateVisitedStage(\n      interviewStage,\n      lastDate\n    );\n    lastDate = enteredAt;\n\n    visitedStages.push(visitedStage);\n  }\n\n  return {\n    visitedStages: visitedStages.reverse(),\n    nextStage: {\n      interviewStage: ORDERED_INTERVIEW_PLAN[NEXT_STAGE_INDEX],\n      interviewSchedule: [\n        generateInterview(randomInterviewTitle()),\n        generateInterview(randomInterviewTitle()),\n        generateInterview(randomInterviewTitle()),\n      ],\n    },\n  };\n}\n\nconst RANDOM_RSVP_STATUS = uniqueRandomArray([\n  \"accepted\",\n  \"tentative\",\n  \"declined\",\n]);\nconst RANDOM_SCORE = uniqueRandomArray([1, 2, 3, 4, \"submitted\"]);\n\nexport function generateVisitedStage(\n  interviewStage: InterviewStage,\n  leftAt?: DateTime\n): [VisitedInterviewStage, DateTime] {\n  const enteredAtDaysAgo = rand([3, 5, 7, 14]);\n  const enteredAt = (leftAt != null ? leftAt : DateTime.now()).minus({\n    days: enteredAtDaysAgo,\n  });\n\n  let nextInterviewStart = (\n    leftAt != null\n      ? leftAt.minus({ days: 1 })\n      : DateTime.now().plus({ days: 2 })\n  )\n    .startOf(\"day\")\n    .set({ hour: 10 });\n  const interviewCount = leftAt != null ? rand([0, 1]) : 4;\n  const randomInterviewTitle = uniqueRandomArray(INTERVIEW_TITLES);\n  const interviews: ScheduledInterview[] = [];\n\n  for (var i = 0; i < interviewCount; i++) {\n    const interviewLength = rand([30, 45, 60, 90]);\n    const interviewerCount = rand([1, 2]);\n\n    const start = nextInterviewStart;\n    const end = start.plus({ minutes: interviewLength });\n\n    const interviewers = [];\n    for (var j = 0; j < interviewerCount; j++) {\n      interviewers.push({\n        id: uuid(),\n        user: {\n          id: uuid(),\n          name: randFullName(),\n          profilePhotoUrl: randAvatar(),\n        },\n        rsvpStatus: RANDOM_RSVP_STATUS(),\n        score: leftAt != null ? RANDOM_SCORE() : \"unsubmitted\",\n      });\n    }\n\n    interviews.push({\n      id: uuid(),\n      interview: generateInterview(randomInterviewTitle()),\n      startIso: start.toISO(),\n      endIso: end.toISO(),\n      interviewers,\n    });\n    nextInterviewStart = end;\n  }\n\n  return [\n    {\n      id: uuid(),\n      interviewStage,\n      enteredAtIso: enteredAt.toISO(),\n      leftAtIso: leftAt && leftAt.toISO(),\n      interviews,\n    },\n    enteredAt,\n  ];\n}\n\nexport function generateInterview(title: string): Interview {\n  return {\n    id: uuid(),\n    title,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}