{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nimport { getSecondsInUnit } from './units';\nimport { getDiffRatioToNextRoundedNumber } from '../round';\nexport default function getStepMinTime(step, _ref) {\n  var prevStep = _ref.prevStep,\n    timestamp = _ref.timestamp,\n    now = _ref.now,\n    future = _ref.future,\n    round = _ref.round;\n  var minTime; // \"threshold_for_xxx\" is a legacy property.\n\n  if (prevStep) {\n    if (prevStep.id || prevStep.unit) {\n      minTime = step[\"threshold_for_\".concat(prevStep.id || prevStep.unit)];\n    }\n  }\n  if (minTime === undefined) {\n    // \"threshold\" is a legacy property.\n    if (step.threshold !== undefined) {\n      // \"threshold\" is a legacy name for \"minTime\".\n      minTime = step.threshold; // \"threshold\" function is deprecated.\n\n      if (typeof minTime === 'function') {\n        minTime = minTime(now, future);\n      }\n    }\n  }\n  if (minTime === undefined) {\n    minTime = step.minTime;\n  } // A deprecated way of specifying a different threshold\n  // depending on the previous step's unit.\n\n  if (_typeof(minTime) === 'object') {\n    if (prevStep && prevStep.id && minTime[prevStep.id] !== undefined) {\n      minTime = minTime[prevStep.id];\n    } else {\n      minTime = minTime.default;\n    }\n  }\n  if (typeof minTime === 'function') {\n    minTime = minTime(timestamp, {\n      future: future,\n      getMinTimeForUnit: function getMinTimeForUnit(toUnit, fromUnit) {\n        return _getMinTimeForUnit(toUnit, fromUnit || prevStep && prevStep.formatAs, {\n          round: round\n        });\n      }\n    });\n  } // Evaluate the `test()` function.\n  // `test()` function is deprecated.\n\n  if (minTime === undefined) {\n    if (step.test) {\n      if (step.test(timestamp, {\n        now: now,\n        future: future\n      })) {\n        // `0` threshold always passes.\n        minTime = 0;\n      } else {\n        // `MAX_SAFE_INTEGER` threshold won't ever pass in real life.\n        minTime = 9007199254740991; // Number.MAX_SAFE_INTEGER\n      }\n    }\n  }\n  if (minTime === undefined) {\n    if (prevStep) {\n      if (step.formatAs && prevStep.formatAs) {\n        minTime = _getMinTimeForUnit(step.formatAs, prevStep.formatAs, {\n          round: round\n        });\n      }\n    } else {\n      // The first step's `minTime` is `0` by default.\n      minTime = 0;\n    }\n  } // Warn if no `minTime` was defined or could be deduced.\n\n  if (minTime === undefined) {\n    console.warn('[javascript-time-ago] A step should specify `minTime`:\\n' + JSON.stringify(step, null, 2));\n  }\n  return minTime;\n}\nfunction _getMinTimeForUnit(toUnit, fromUnit, _ref2) {\n  var round = _ref2.round;\n  var toUnitAmount = getSecondsInUnit(toUnit); // if (!fromUnit) {\n  // \treturn toUnitAmount;\n  // }\n  // if (!fromUnit) {\n  // \tfromUnit = getPreviousUnitFor(toUnit)\n  // }\n\n  var fromUnitAmount;\n  if (fromUnit === 'now') {\n    fromUnitAmount = getSecondsInUnit(toUnit);\n  } else {\n    fromUnitAmount = getSecondsInUnit(fromUnit);\n  }\n  if (toUnitAmount !== undefined && fromUnitAmount !== undefined) {\n    return toUnitAmount - fromUnitAmount * (1 - getDiffRatioToNextRoundedNumber(round));\n  }\n}","map":{"version":3,"names":["getSecondsInUnit","getDiffRatioToNextRoundedNumber","getStepMinTime","step","_ref","prevStep","timestamp","now","future","round","minTime","id","unit","concat","undefined","threshold","_typeof","default","getMinTimeForUnit","toUnit","fromUnit","_getMinTimeForUnit","formatAs","test","console","warn","JSON","stringify","_ref2","toUnitAmount","fromUnitAmount"],"sources":["/Users/will/Desktop/design-task/node_modules/.pnpm/javascript-time-ago@2.3.7/node_modules/javascript-time-ago/source/steps/getStepMinTime.js"],"sourcesContent":["import { getSecondsInUnit } from './units'\r\nimport { getDiffRatioToNextRoundedNumber } from '../round'\r\n\r\nexport default function getStepMinTime(step, {\r\n\tprevStep,\r\n\ttimestamp,\r\n\t// `now` argument is used in a deprecated `step.test()` function.\r\n\tnow,\r\n\tfuture,\r\n\tround\r\n}) {\r\n\tlet minTime\r\n\t// \"threshold_for_xxx\" is a legacy property.\r\n\tif (prevStep) {\r\n\t\tif (prevStep.id || prevStep.unit) {\r\n\t\t\tminTime = step[`threshold_for_${prevStep.id || prevStep.unit}`]\r\n\t\t}\r\n\t}\r\n\tif (minTime === undefined) {\r\n\t\t// \"threshold\" is a legacy property.\r\n\t\tif (step.threshold !== undefined) {\r\n\t\t\t// \"threshold\" is a legacy name for \"minTime\".\r\n\t\t\tminTime = step.threshold\r\n\t\t\t// \"threshold\" function is deprecated.\r\n\t\t\tif (typeof minTime === 'function') {\r\n\t\t\t\tminTime = minTime(now, future)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (minTime === undefined) {\r\n\t\tminTime = step.minTime\r\n\t}\r\n\t// A deprecated way of specifying a different threshold\r\n\t// depending on the previous step's unit.\r\n\tif (typeof minTime === 'object') {\r\n\t\tif (prevStep && prevStep.id && minTime[prevStep.id] !== undefined) {\r\n\t\t\tminTime = minTime[prevStep.id]\r\n\t\t} else {\r\n\t\t\tminTime = minTime.default\r\n\t\t}\r\n\t}\r\n\tif (typeof minTime === 'function') {\r\n\t\tminTime = minTime(timestamp, {\r\n\t\t\tfuture,\r\n\t\t\tgetMinTimeForUnit(toUnit, fromUnit) {\r\n\t\t\t\treturn getMinTimeForUnit(\r\n\t\t\t\t\ttoUnit,\r\n\t\t\t\t\tfromUnit || prevStep && prevStep.formatAs,\r\n\t\t\t\t\t{ round }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t// Evaluate the `test()` function.\r\n\t// `test()` function is deprecated.\r\n\tif (minTime === undefined) {\r\n\t\tif (step.test) {\r\n\t\t\tif (step.test(timestamp, {\r\n\t\t\t\tnow,\r\n\t\t\t\tfuture\r\n\t\t\t})) {\r\n\t\t\t\t// `0` threshold always passes.\r\n\t\t\t\tminTime = 0\r\n\t\t\t} else {\r\n\t\t\t\t// `MAX_SAFE_INTEGER` threshold won't ever pass in real life.\r\n\t\t\t\tminTime = 9007199254740991 // Number.MAX_SAFE_INTEGER\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (minTime === undefined) {\r\n\t\tif (prevStep) {\r\n\t\t\tif (step.formatAs && prevStep.formatAs) {\r\n\t\t\t\tminTime = getMinTimeForUnit(step.formatAs, prevStep.formatAs, { round })\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// The first step's `minTime` is `0` by default.\r\n\t\t\tminTime = 0\r\n\t\t}\r\n\t}\r\n\t// Warn if no `minTime` was defined or could be deduced.\r\n\tif (minTime === undefined) {\r\n\t\tconsole.warn('[javascript-time-ago] A step should specify `minTime`:\\n' + JSON.stringify(step, null, 2))\r\n\t}\r\n\treturn minTime\r\n}\r\n\r\nfunction getMinTimeForUnit(toUnit, fromUnit, { round }) {\r\n\tconst toUnitAmount = getSecondsInUnit(toUnit)\r\n\t// if (!fromUnit) {\r\n\t// \treturn toUnitAmount;\r\n\t// }\r\n\t// if (!fromUnit) {\r\n\t// \tfromUnit = getPreviousUnitFor(toUnit)\r\n\t// }\r\n\tlet fromUnitAmount\r\n\tif (fromUnit === 'now') {\r\n\t\tfromUnitAmount = getSecondsInUnit(toUnit)\r\n\t} else {\r\n\t\tfromUnitAmount = getSecondsInUnit(fromUnit)\r\n\t}\r\n\tif (toUnitAmount !== undefined && fromUnitAmount !== undefined) {\r\n\t\treturn toUnitAmount - fromUnitAmount * (1 - getDiffRatioToNextRoundedNumber(round))\r\n\t}\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}